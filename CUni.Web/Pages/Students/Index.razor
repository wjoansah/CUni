@page "/students"
@using CUni.Shared;
@inject HttpClient HttpClient;
@inject NavigationManager NavigationManager;

<h3>Students</h3>
<NavLink>
    <a href="/students/create">Create New</a>
</NavLink>

<form action="/students" method="get" @onsubmit="HandleFetch">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="searchString" @bind-value="searchString" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a href="/students">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <NavLink>
                    <a href="/students?sortOrder=name_desc" @onclick="SortByLastName">
                        Last Name
                    </a>
                </NavLink>
            </th>
            <th>
                First Name(s)
            </th>
            <th>
                <NavLink>
                    <a href="/students?sortOrder=date_desc" @onclick="SortByEnrollmentDate">
                        Enrollment Date
                    </a>
                </NavLink>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (students is not null)
        {
            @foreach (var item in students)
            {
                <tr>
                    <td>
                        @item.LastName
                    </td>
                    <td>
                        @item.FirstMidName
                    </td>
                    <td>
                        @item.EnrollmentDate
                    </td>
                    <td>
                        <a href="/students/edit/@item.Id">Edit</a> |
                        <a href="/students/details/@item.Id">Details</a> |
                        <a href="/students/delete/@item.Id">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    [Parameter] public string sortOrder { get; set; }
    [Parameter] public string searchString { get; set; }

    ICollection<StudentResponse> students;

    async Task HandleFetch()
    {
        students = await HttpClient.GetFromJsonAsync<ICollection<StudentResponse>>($"/Students?searchString={searchString}&sortOrder={sortOrder}");
    }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(sortOrder);
        await HandleFetch();
    }

    void SortByLastName()
    {
        sortOrder = "name_desc";
        NavigationManager.NavigateTo($"/students?sortOrder={sortOrder}");
    }

    void SortByEnrollmentDate()
    {
        sortOrder = "date_desc";
        NavigationManager.NavigateTo($"/students?sortOrder={sortOrder}");
    }
}
